//solution-3---knapsack problem

#include<iostream>
using namespace std;

int max(int a, int b) 
{ 
    if(a>b){
        return a;
    }
    else{
        return b;
    }
    
}


int problem(int weight, int w[], int value[], int n)
{

	if (n == 0 || weight == 0)
		return 0;

	if (w[n - 1] > weight)
		return problem(weight, w, value, n - 1);

	else
		return max(
			value[n - 1] + problem(weight - w[n - 1], w, value, n - 1),
			problem(weight, w, value, n - 1)
			);
}


int main()
{

    int value[] = { 12,10,21,15 };
    int weight[] = { 2,1,3,2 };
    int maxval = 7;
    int n = sizeof(value) / sizeof(value[0]);
    cout << problem(maxval, weight, value, n);
    return 0;
}


//output--------------
48

